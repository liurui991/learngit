
如查看的文件有大量时 “空格” 为下一页，字母 “q” 是退出

// 初始化 git 仓库
git init

// 查看 git 状态
git status

// 显示修改过的文件
git diff

// 添加文件到 git
git add 文件

// 提交添加的文件
git commit -m '备注'

// 显示最近提交操作
git log
git log --pretty=oneline
// 查看历史分支
git log --graph --pretty=oneline --abbrev-commit

// 跳转到上一个版本
git reset --hard HEAD^

// 跳到指定的版本
git reset --hard commit_id(版本的ID)

// 查看操作记录
git reflog

// 从暂存区拿出文件（使用了 add 提交）
git restore --staged <file>(文件名)
// 放弃工作目录中的更改
git restore <file>(文件名)
// 如提交到版本库（commit 提交）那就只能考虑  git reset --hard xxx  退回到以前版本
git restore <file>(文件名)


// 对比最新版本和本地的区别
git diff HEAD -- readme.txt
HEAD 指向的版本就是当前版本，因此，Git允许我们在版本的历史之间穿梭，使用命令git reset --hard commit_id



//在用户主目录下生成一个ssh-key密钥
ssh-keygen -t rsa -C "youremail@example.com"

你需要把邮件地址换成你自己的邮件地址，然后一路回车，使用默认值即可，
由于这个Key也不是用于军事目的，所以也无需设置密码。
如果一切顺利的话，可以在用户主目录里找到.ssh目录，里面有id_rsa和id_rsa.pub两个文件，
这两个就是SSH Key的秘钥对，id_rsa是私钥，不能泄露出去，id_rsa.pub是公钥，可以放心地告诉任何人。



// 上传内容到 gitHub 上
// 廖雪峰:github默认把master改名成main了，你别管它，就推master，回头去github把main分支删了，不要惯它的毛病
git remote add origin https://github.com/liurui991/learngit.git
git branch -M main

// 由于远程库是空的，我们第一次推送master分支时，加上了-u参数，
// Git不但会把本地的master分支内容推送的远程新的master分支，
// 还会把本地的master分支和远程的master分支关联起来，在以后的推送或者拉取时就可以简化命令。
git push -u origin main
// 从现在起，只要本地作了提交，就可以通过命令：
git push origin master

// 克隆远程仓库数据
git clone 网址



// Git鼓励大量使用分支：

查看分支：git branch

创建分支：git branch <name>

切换分支：git checkout <name>或者git switch <name>

创建+切换分支：git checkout -b <name>或者git switch -c <name>

合并某分支到当前分支：git merge <name>

// 合并到当前分支，查看生成的历史有分支
// 合并分支时，加上--no-ff参数就可以用普通模式合并，合并后的历史有分支，能看出来曾经做过合并，
// 而 fast forward 合并就看不出来曾经做过合并（默认使用这个）
git merge --no-ff -m "merge with no-ff" dev

删除分支：git branch -d <name>

查看分支合并图：git log --graph 


// “储藏”当前工作现场，等以后恢复现场后继续工作：
git stash
//恢复“储藏”的当前工作现场，有两个办法：
一是用git stash apply恢复，但是恢复后，stash内容并不删除，你需要用git stash drop来删除；
另一种方式是用git stash pop，恢复的同时把stash内容也删了：

你可以多次stash，恢复的时候，先用git stash list查看，然后恢复指定的stash，用命令：
$ git stash apply stash@{0}

// Git专门提供了一个cherry-pick命令，让我们能复制一个特定的提交到当前分支：aaa
git cherry-pick <commit>		// 提交的修改“复制”到当前分支，避免重复劳动。


